body{
    background-color: #1d1d1d;
}

.box{
    position:relative;
    /*Static is the default position so things just flow from top to bottom*/
    left:50px;
    top:50px;
    height:100px;
    width:100px;
    background-color: blue;
    z-index: -10;
}

.container{
    height:100px;
    width:100px;
    background-color: red;
    z-index:10;
}
/*If you change in overlaping position, watch lesson 14 of the tutorial*/

.box2{
    position:absolute;
    /*Absolute means that the computer has removed it from the position it was placed be the programmer so it's like there is no box2 before container 2 that's why u'll notice that container2 appears immediately after container. It has placed it where you have dictated which is right:0, top:50px*/
    right:0;/*This means move it to the complete right*/
    top:50px;
    height:100px;
    width:100px;
    background-color: orange;
}

.box3{
    position:fixed;
    /*Fixed means that even if you scroll down,this doesn't disappear. It remains wherever it is.You'll notice that all the other 3 disapper when we move towards the bottom of container2*/
    right:0;
    top:180px;
    height:100px;
    width:100px;
    background-color: yellow;
}

.box4{
    position:sticky;
    /*Sticky will allow movement but the moment it reaches the top, it will stick and not move.The maximum it can move is up to the top but it cant diappear past that*/
    top:0;
    height:100px;
    width:100px;
    background-color: plum;
}

.container2{
    height:200vh;/*This means two times the view height meaning the height of the screen that can be seen ata time.*/
    width:100px;
    background-color: green;
}

.box5{
    position: absolute;
    right:0;
    top:50px;
    width:100px;
    height:100px;
    background-color: aqua;
}

.container3{
    position:relative;
    /*You'll notice that because of relative, the box5 moves to the complete right and 50px top of this container not the whole screen.But plz note that the div for box5 has to be inside the container.*/
    width:500px;
    height:600px;
    background-color: beige;
}

/*Measurements lesson*/
.measurements{
    color:#fff;
    text-align:center;
    font-size:20px;
}

/*The default font-size inside your browser is 16px*/
h1{
    /*font-size: 200%; This is 200% of 16px(the default)
    font-size: 20vw; Just try it and see but I think the size of a letter = width of the screen/20
    font-size: 20vh; Just try it and see but I think the size of a letter = height of the screen/20
    font-size: 1em; One times the default font-size or the size that has been set for the words inside the div/section etc that this h1 is in eg in this case, 20px
    font-size: 2em; 2 * 20px */
    font-size: 1.5em;
    /*em is good for scaling:eg I have put the default size as 20px in the div that contains all the text. Then I've put 1.5,1.3 etc for the h1,h2 etc. If I want to change the font size, I can just change the default and it will affect everything else*/
}

h2{
    font-size: 1.3em;
}

h3{
    font-size: 1.1em;
}

p{
    font-size: 0.8em;
}

.measurements2{
    color:#fff;
    text-align: center;
    font-size:20px;
}

.measurements2 ul{
    font-size:2em;/*U'll notice that the items in the second ul have a bigger size than the items in the first ul. This is bcz the 1st one = 2*20px while the 2nd = 2 * (2*(20px))*/
}

.measurements3{
    color:#fff;
    text-align: center;
    /*font-size: 62.5%; Means that it is 62.5% * 16px which is 10px. You could place this in the :root/html tag to set 10px as the default then use rem to scale.*/
}

.measurements3 h1{
    font-size: 1.5rem;/*Rem means root em meaning the font-size * the default size in the root/html tag(:root = html). If it is not specified, it's 16px*/
}

.measurements3 h2{
    font-size: 1.3rem;
}

.measurements3 h3{
    font-size: 1.1rem;
}

.measurements3 p{
    font-size: 0.8rem;
}